{"remainingRequest":"C:\\projetos\\sonocaps-vue\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!C:\\projetos\\sonocaps-vue\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\projetos\\sonocaps-vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\projetos\\sonocaps-vue\\src\\pages\\covid-19.vue?vue&type=template&id=b57bed58&scoped=true&lang=html&","dependencies":[{"path":"C:\\projetos\\sonocaps-vue\\src\\pages\\covid-19.vue","mtime":1630994108815},{"path":"C:\\projetos\\sonocaps-vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\projetos\\sonocaps-vue\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"C:\\projetos\\sonocaps-vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\projetos\\sonocaps-vue\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:dmFyIHJlbmRlciA9IGZ1bmN0aW9uKCkgewogIHZhciBfdm0gPSB0aGlzCiAgdmFyIF9oID0gX3ZtLiRjcmVhdGVFbGVtZW50CiAgdmFyIF9jID0gX3ZtLl9zZWxmLl9jIHx8IF9oCiAgcmV0dXJuIF9jKCJzZWN0aW9uIiwgWwogICAgX3ZtLiRzY3JlZW4ud2lkdGggPiA3NjcKICAgICAgPyBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogImNvbnRhaW5lckJhbm5lciB0ZXh0LWNlbnRlciIgfSwgWwogICAgICAgICAgX2MoImltZyIsIHsKICAgICAgICAgICAgYXR0cnM6IHsKICAgICAgICAgICAgICBzcmM6IHJlcXVpcmUoIkAvYXNzZXRzL2ltZy9pbnN0aXR1Y2lvbmFpcy9iYW5uZXItY292aWQtZGVza3RvcC5qcGciKSwKICAgICAgICAgICAgICBhbHQ6ICJOb3Nzb3MgY3VpZGFkb3MiCiAgICAgICAgICAgIH0KICAgICAgICAgIH0pCiAgICAgICAgXSkKICAgICAgOiBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogImNvbnRhaW5lckJhbm5lciB0ZXh0LWNlbnRlciIgfSwgWwogICAgICAgICAgX2MoImltZyIsIHsKICAgICAgICAgICAgYXR0cnM6IHsKICAgICAgICAgICAgICBzcmM6IHJlcXVpcmUoIkAvYXNzZXRzL2ltZy9pbnN0aXR1Y2lvbmFpcy9iYW5uZXItY292aWQtbW9iaWxlLmpwZyIpLAogICAgICAgICAgICAgIGFsdDogIk5vc3NvcyBjdWlkYWRvcyIKICAgICAgICAgICAgfQogICAgICAgICAgfSkKICAgICAgICBdKSwKICAgIF9jKCJkaXYiLCB7IHN0YXRpY0NsYXNzOiAicm93IGFsaWduLWNlbnRlciIgfSwgWwogICAgICBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogImNvbHVtbiBzbWFsbC0xMiB0ZXh0LWNlbnRlciIgfSwgWwogICAgICAgIF9jKCJpbWciLCB7CiAgICAgICAgICBhdHRyczogewogICAgICAgICAgICBzcmM6IHJlcXVpcmUoIkAvYXNzZXRzL2ltZy9pbnN0aXR1Y2lvbmFpcy9jb250cmEtY292aWQuanBnIiksCiAgICAgICAgICAgIGFsdDogIkNvbnRyYSBjb3JvbmF2w61ydXMiCiAgICAgICAgICB9CiAgICAgICAgfSkKICAgICAgXSksCiAgICAgIF92bS5fbSgwKQogICAgXSksCiAgICBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogInJvdyBhbGlnbi1jZW50ZXIgY29udGFpbmVyUXVlc3Rpb25zIiB9LCBbCiAgICAgIF9jKCJkaXYiLCB7IHN0YXRpY0NsYXNzOiAiY29sdW1uIHNtYWxsLTEyIHRleHQtY2VudGVyIiB9LCBbCiAgICAgICAgX2MoImltZyIsIHsKICAgICAgICAgIGF0dHJzOiB7CiAgICAgICAgICAgIHNyYzogcmVxdWlyZSgiQC9hc3NldHMvaW1nL2luc3RpdHVjaW9uYWlzL2R1dmlkYXMuanBnIiksCiAgICAgICAgICAgIGFsdDogIlRpcmUgc3VhcyBkw7p2aWRhcyIKICAgICAgICAgIH0KICAgICAgICB9KQogICAgICBdKSwKICAgICAgX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICJjb2x1bW4gc21hbGwtMTIgbGFyZ2UtNiB0ZXh0LWNlbnRlciIgfSwgWwogICAgICAgIF9jKAogICAgICAgICAgImRpdiIsCiAgICAgICAgICB7IHN0YXRpY0NsYXNzOiAiY29udGFpbmVyRHV2aWRhcyIgfSwKICAgICAgICAgIF92bS5fbChfdm0uaXRlbnMuc2xpY2UoMCwgNCksIGZ1bmN0aW9uKGl0ZW0sIGkpIHsKICAgICAgICAgICAgcmV0dXJuIF9jKCJkaXYiLCB7IGtleTogaSB9LCBbCiAgICAgICAgICAgICAgX2MoInAiLCBbX3ZtLl92KCIgIiArIF92bS5fcyhpdGVtLnBlcmd1bnRhKSldKSwKICAgICAgICAgICAgICBfYygicCIsIFtfdm0uX3YoIiAiICsgX3ZtLl9zKGl0ZW0ucmVzcG9zdGEpKV0pCiAgICAgICAgICAgIF0pCiAgICAgICAgICB9KSwKICAgICAgICAgIDAKICAgICAgICApCiAgICAgIF0pLAogICAgICBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogImNvbHVtbiBzbWFsbC0xMiBsYXJnZS02IHRleHQtY2VudGVyIiB9LCBbCiAgICAgICAgX2MoCiAgICAgICAgICAiZGl2IiwKICAgICAgICAgIHsgc3RhdGljQ2xhc3M6ICJjb250YWluZXJEdXZpZGFzIiB9LAogICAgICAgICAgX3ZtLl9sKF92bS5pdGVucy5zbGljZSg0LCA3KSwgZnVuY3Rpb24oaXRlbSwgaSkgewogICAgICAgICAgICByZXR1cm4gX2MoImRpdiIsIHsga2V5OiBpIH0sIFsKICAgICAgICAgICAgICBfYygicCIsIFtfdm0uX3YoIiAiICsgX3ZtLl9zKGl0ZW0ucGVyZ3VudGEpKV0pLAogICAgICAgICAgICAgIF9jKCJwIiwgW192bS5fdigiICIgKyBfdm0uX3MoaXRlbS5yZXNwb3N0YSkpXSkKICAgICAgICAgICAgXSkKICAgICAgICAgIH0pLAogICAgICAgICAgMAogICAgICAgICkKICAgICAgXSkKICAgIF0pLAogICAgX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICJjb250YWluZXJCZyIgfSwgWwogICAgICBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogInJvdyBjb250YWluZXJWaWRlb3MiIH0sIFsKICAgICAgICBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogImNvbHVtbiBzbWFsbC0xMiBsYXJnZS02IHRleHQtY2VudGVyIiB9LCBbCiAgICAgICAgICBfYygiZGl2IiwgWwogICAgICAgICAgICBfYygiaW1nIiwgewogICAgICAgICAgICAgIGF0dHJzOiB7CiAgICAgICAgICAgICAgICBzcmM6IHJlcXVpcmUoIkAvYXNzZXRzL2ltZy9pbnN0aXR1Y2lvbmFpcy9sb2dpc3RpY2EtdHJhbnNwb3J0ZS5qcGciKSwKICAgICAgICAgICAgICAgIGFsdDogIkxvZ8Otc3RpY2EgZSBUcmFuc3BvcnRlIgogICAgICAgICAgICAgIH0KICAgICAgICAgICAgfSkKICAgICAgICAgIF0pLAogICAgICAgICAgX2MoImlmcmFtZSIsIHsKICAgICAgICAgICAgYXR0cnM6IHsKICAgICAgICAgICAgICB3aWR0aDogIjU2MCIsCiAgICAgICAgICAgICAgaGVpZ2h0OiAiMzE1IiwKICAgICAgICAgICAgICBzcmM6ICJodHRwczovL3d3dy55b3V0dWJlLmNvbS9lbWJlZC9RR1BCcVFaN21TRSIsCiAgICAgICAgICAgICAgdGl0bGU6ICJZb3VUdWJlIHZpZGVvIHBsYXllciIsCiAgICAgICAgICAgICAgZnJhbWVib3JkZXI6ICIwIiwKICAgICAgICAgICAgICBhbGxvdzoKICAgICAgICAgICAgICAgICJhY2NlbGVyb21ldGVyOyBhdXRvcGxheTsgY2xpcGJvYXJkLXdyaXRlOyBlbmNyeXB0ZWQtbWVkaWE7IGd5cm9zY29wZTsgcGljdHVyZS1pbi1waWN0dXJlIiwKICAgICAgICAgICAgICBhbGxvd2Z1bGxzY3JlZW46ICIiCiAgICAgICAgICAgIH0KICAgICAgICAgIH0pCiAgICAgICAgXSksCiAgICAgICAgX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICJjb2x1bW4gc21hbGwtMTIgbGFyZ2UtNiB0ZXh0LWNlbnRlciIgfSwgWwogICAgICAgICAgX2MoImRpdiIsIFsKICAgICAgICAgICAgX2MoImltZyIsIHsKICAgICAgICAgICAgICBhdHRyczogewogICAgICAgICAgICAgICAgc3JjOiByZXF1aXJlKCJAL2Fzc2V0cy9pbWcvaW5zdGl0dWNpb25haXMvaW5kdXN0cmlhLXByb2R1Y2FvLmpwZyIpLAogICAgICAgICAgICAgICAgYWx0OiAiSW5kw7pzdHJpYSBlIFByb2R1w6fDo28iCiAgICAgICAgICAgICAgfQogICAgICAgICAgICB9KQogICAgICAgICAgXSksCiAgICAgICAgICBfYygiaWZyYW1lIiwgewogICAgICAgICAgICBhdHRyczogewogICAgICAgICAgICAgIHdpZHRoOiAiNTYwIiwKICAgICAgICAgICAgICBoZWlnaHQ6ICIzMTUiLAogICAgICAgICAgICAgIHNyYzogImh0dHBzOi8vd3d3LnlvdXR1YmUuY29tL2VtYmVkLzItdDZCaEM4eFpNIiwKICAgICAgICAgICAgICB0aXRsZTogIllvdVR1YmUgdmlkZW8gcGxheWVyIiwKICAgICAgICAgICAgICBmcmFtZWJvcmRlcjogIjAiLAogICAgICAgICAgICAgIGFsbG93OgogICAgICAgICAgICAgICAgImFjY2VsZXJvbWV0ZXI7IGF1dG9wbGF5OyBjbGlwYm9hcmQtd3JpdGU7IGVuY3J5cHRlZC1tZWRpYTsgZ3lyb3Njb3BlOyBwaWN0dXJlLWluLXBpY3R1cmUiLAogICAgICAgICAgICAgIGFsbG93ZnVsbHNjcmVlbjogIiIKICAgICAgICAgICAgfQogICAgICAgICAgfSkKICAgICAgICBdKSwKICAgICAgICBfYygKICAgICAgICAgICJkaXYiLAogICAgICAgICAgeyBzdGF0aWNDbGFzczogImNvbHVtbiBzbWFsbC0xMiIgfSwKICAgICAgICAgIFsKICAgICAgICAgICAgX2MoCiAgICAgICAgICAgICAgInJvdXRlci1saW5rIiwKICAgICAgICAgICAgICB7IHN0YXRpY0NsYXNzOiAiZmFjYVNldVBlZGlkbyIsIGF0dHJzOiB7IHRvOiAiL3Byb2R1dG9zIiB9IH0sCiAgICAgICAgICAgICAgW192bS5fdigiRkHDh0EgU0VVIFBFRElETyIpXQogICAgICAgICAgICApCiAgICAgICAgICBdLAogICAgICAgICAgMQogICAgICAgICkKICAgICAgXSksCiAgICAgIF9jKCJkaXYiLCB7IHN0YXRpY0NsYXNzOiAiaW1nRmluYWwiIH0pCiAgICBdKQogIF0pCn0KdmFyIHN0YXRpY1JlbmRlckZucyA9IFsKICBmdW5jdGlvbigpIHsKICAgIHZhciBfdm0gPSB0aGlzCiAgICB2YXIgX2ggPSBfdm0uJGNyZWF0ZUVsZW1lbnQKICAgIHZhciBfYyA9IF92bS5fc2VsZi5fYyB8fCBfaAogICAgcmV0dXJuIF9jKCJkaXYiLCB7IHN0YXRpY0NsYXNzOiAiY29sdW1uIHNtYWxsLTEyIGxhcmdlLTkgdGV4dC1jZW50ZXIiIH0sIFsKICAgICAgX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICJjb250YWluZXJUeHQiIH0sIFsKICAgICAgICBfYygicCIsIFsKICAgICAgICAgIF92bS5fdigKICAgICAgICAgICAgIiBBIGdlbnRlIGFxdWkgbmEgTmV3IEhhaXIgdGVtIG8gYmVtLWVzdGFyIGUgYSBzYcO6ZGUgZGUgbm9zc29zIGNvbGFib3JhZG9yZXMsIGNsaWVudGVzIGUgcGFyY2Vpcm9zIGNvbW8gcHJpb3JpZGFkZS4gIgogICAgICAgICAgKSwKICAgICAgICAgIF9jKCJiciIsIHsgc3RhdGljQ2xhc3M6ICJoaWRlLWZvci1zbWFsbC1vbmx5IiB9KSwKICAgICAgICAgIF92bS5fdigKICAgICAgICAgICAgIiBTYWJlbW9zIHF1ZSBvcyBwcm9kdXRvcyBxdWUgdmVuZGVtb3MgdsOjbyBhanVkYXIgYXMgcGVzc29hcyBhIGVuZnJlbnRhciBlc3NlIG1vbWVudG8gZGlmw61jaWwuICIKICAgICAgICAgICksCiAgICAgICAgICBfYygiYnIiLCB7IHN0YXRpY0NsYXNzOiAiaGlkZS1mb3Itc21hbGwtb25seSIgfSksCiAgICAgICAgICBfdm0uX3YoCiAgICAgICAgICAgICIgU2VndWluZG8gYXMgcHJlbWlzc2FzIGVzdGFiZWxlY2lkYXMgcGVsYSBPcmdhbml6YcOnw6NvIE11bmRpYWwgZGUgU2HDumRlIGUgYSBvcmllbnRhw6fDo28gZGEgbm9zc2Egw6FyZWEgaW50ZXJuYSBkZSBzZWd1cmFuw6dhIGUgc2HDumRlLCBkZWZpbmltb3MgYcOnw7VlcyBhZGljaW9uYWlzIHByZXZlbnRpdmFzIGUgY29ycmV0aXZhcyBwYXJhIGFzc2VndXJhciB1bSBhbWJpZW50ZSBzYXVkw6F2ZWwgcGFyYSB0b2Rvcy4gIgogICAgICAgICAgKQogICAgICAgIF0pLAogICAgICAgIF9jKCJwIiwgWwogICAgICAgICAgX3ZtLl92KAogICAgICAgICAgICAiIFJlZm9yw6dhbW9zIG5vc3NvcyBzZXJ2acOnb3MgZGUgbGltcGV6YSBuYXMgc2FsYXMgZGUgZXNjcml0w7NyaW9zIGUgY2VudHJvcyBkZSBkaXN0cmlidWnDp8Ojby4gRGVtb3MgYW1wbG8gYWNlc3NvIGEgaW5mb3JtYcOnw7VlcyBzZWd1cmFzIHNvYnJlIG8gYXNzdW50byBwYXJhIHRvZG8gbm9zc28gdGltZSwgcG9yIG1laW8gZG8gY29tcGFydGlsaGFtZW50byBpbnRlcm5vIGRlIHbDrWRlb3MgZSBjYXJ0aWxoYXMsIGNvbXVuaWNhbmRvIGFzIGZvcm1hcyBkZSBjb250w6FnaW8gZSByZWNvbWVuZGHDp8O1ZXMgcGFyYSBhIHByZXZlbsOnw6NvLiAiCiAgICAgICAgICApCiAgICAgICAgXSksCiAgICAgICAgX2MoInAiLCBbCiAgICAgICAgICBfdm0uX3YoCiAgICAgICAgICAgICIgQ29udGludWFtb3MgdHJhYmFsaGFuZG8gcGFyYSBnYXJhbnRpciBhIHF1YWxpZGFkZSBkb3Mgbm9zc29zIHByb2R1dG9zIGUgc2VydmnDp29zLCAiCiAgICAgICAgICApLAogICAgICAgICAgX2MoImJyIiwgeyBzdGF0aWNDbGFzczogImhpZGUtZm9yLXNtYWxsLW9ubHkiIH0pLAogICAgICAgICAgX3ZtLl92KCIgZSB1bSBhbWJpZW50ZSBkZSBjb21wcmEgZSBkZSB0cmFiYWxobyBzZWd1cm8gcGFyYSB0b2Rvcy4gIikKICAgICAgICBdKQogICAgICBdKQogICAgXSkKICB9Cl0KcmVuZGVyLl93aXRoU3RyaXBwZWQgPSB0cnVlCgpleHBvcnQgeyByZW5kZXIsIHN0YXRpY1JlbmRlckZucyB9"}]}