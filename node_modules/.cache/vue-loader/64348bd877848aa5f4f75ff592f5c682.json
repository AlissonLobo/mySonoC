{"remainingRequest":"C:\\projetos\\sonocaps-vue\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!C:\\projetos\\sonocaps-vue\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\projetos\\sonocaps-vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\projetos\\sonocaps-vue\\src\\components\\gerais\\_kitProdutos.vue?vue&type=template&id=62f6a1ee&scoped=true&","dependencies":[{"path":"C:\\projetos\\sonocaps-vue\\src\\components\\gerais\\_kitProdutos.vue","mtime":1630994108702},{"path":"C:\\projetos\\sonocaps-vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\projetos\\sonocaps-vue\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"C:\\projetos\\sonocaps-vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\projetos\\sonocaps-vue\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}