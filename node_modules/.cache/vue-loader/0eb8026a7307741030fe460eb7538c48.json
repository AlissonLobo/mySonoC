{"remainingRequest":"C:\\projetos\\sonocaps-vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\projetos\\sonocaps-vue\\src\\pages\\blog.vue?vue&type=template&id=4c42a926&scoped=true&","dependencies":[{"path":"C:\\projetos\\sonocaps-vue\\src\\pages\\blog.vue","mtime":1630994108814},{"path":"C:\\projetos\\sonocaps-vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\projetos\\sonocaps-vue\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"C:\\projetos\\sonocaps-vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\projetos\\sonocaps-vue\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CjxkaXYgY2xhc3M9ImJsb2ctY29udGFpbmVyIj4KICA8ZGl2IGNsYXNzPSJibG9nLXdyYXBwZXIiPgogICAgPGg0IGNsYXNzPSJibG9nLWV0aXF1ZXRhIj5NQVTDiVJJQTwvaDQ+CiAgICA8aDEgY2xhc3M9ImJsb2ctdDEiPgogICAgICBKdWp1IFNhbGltZW5pIHJlbGVtYnJhIGRlcHJlc3PDo28gZSBxdWVkYSBkZSBjYWJlbG86ICJQaW9yIGZhc2UgZGEgdmlkYSIKICAgIDwvaDE+CgogICAgPHAgY2xhc3M9ImJsb2ctdDIiPgogICAgICBBcHJlc2VudGFkb3JhIGNvbWVudG91LCBlbSBzZXUgSW5zdGFncmFtLCBzb2JyZSBhcyBkaWZpY3VsZGFkZXMgcXVlCiAgICAgIHBhc3NvdSBubyBwZXLDrW9kbyBlIG1vc3Ryb3UgcGVsYSBwcmltZWlyYSB2ZXogYXMgZmFsaGFzIHF1ZSB0ZXZlIG5vCiAgICAgIGNvdXJvIGNhYmVsdWRvCiAgICA8L3A+CgogICAgPGRpdiBjbGFzcz0iYmxvZy1pbWciPgogICAgICA8aW1nCiAgICAgICAgc3JjPSJAL2Fzc2V0cy9pbWcvYmxvZy9qdWp1LXNhbGltZW5pLmpwZyIKICAgICAgICBhbHQ9Ikp1anUgU2FsaW1lbmkgcmVsZW1icmEgZGVwcmVzc8OjbyBlIHF1ZWRhIGRlIGNhYmVsbyIKICAgICAgLz4KICAgICAgPHAgY2xhc3M9ImJsb2ctdDMiPkp1anUgU2FsaW1lbmkgKEZvdG86IFJlcHJvZHXDp8OjbyAvIEluc3RhZ3JhbSk8L3A+CiAgICA8L2Rpdj4KCiAgICA8cCBjbGFzcz0iYmxvZy10NCBibG9nLXQyIj4KICAgICAgPHNwYW4gY2xhc3M9ImJsb2ctdDciPkp1anUgU2FsaW1lbmk8L3NwYW4+IGFicml1IG8gY29yYcOnw6NvIG5vIEluc3RhZ3JhbSBlIGZhbG91LCBwZWxhIHByaW1laXJhIHZleiwgc29icmUgbyBwZXLDrW9kbwogICAgICBlbSBxdWUgc29mcmV1IHF1ZWRhIGRlIGNhYmVsbyBlbSBmYXRvIHBzaWNvc3NvbcOhdGljbywgZ2VyYWRhIHBvciBjb250YQogICAgICBkZSB1bWEgPHNwYW4gY2xhc3M9ImJsb2ctdDciPmRlcHJlc3PDo28gZW0gbWVhZG9zIGRlIDIwMTg8L3NwYW4+LiBBIGFwcmVzZW50YWRvcmEgY29tZW50b3UsCiAgICAgIGluY2x1c2l2ZSwgY29tbyBmYXppYSBwYXJhIGRpc2ZhcsOnYXIgYXMgZmFsaGFzIG5vIGNvdXJvIGNhYmVsdWRvIG5hCiAgICAgIMOpcG9jYS4KICAgIDwvcD4KCiAgICA8cCBjbGFzcz0iYmxvZy10NCBibG9nLXQyIj4KICAgICAgIkRlcG9pcyBkZSBtdWl0byB0ZW1wbywgbWUgc2ludG8gY29uZm9ydMOhdmVsIHBhcmEgbW9zdHJhciBlIHBhcmEgZmFsYXIuCiAgICAgIEVtIDIwMTgsIGrDoSBmYWxlaSB2w6FyaWFzIHZlemVzIHBhcmEgdm9jw6pzIHF1ZSBldSBwYXNzZWkgcG9yIHVtYSBxdWVkYSBkZQogICAgICBjYWJlbG8gaW1lbnNhLCBkZXNlc3BlcmFkb3JhLCBwb3IgY2F1c2EgZGUgcHJvYmxlbWFzIGVtb2Npb25haXMsIHBlbGEKICAgICAgZGVwcmVzc8Ojby4gVG9kYSBlc3NhIG1pbmhhIHBhcnRlIGRlIGNpbWEgZG8gY2FiZWxvIGNhaXUuIENhw61hIGVtCiAgICAgIG1lY2hhcyIsIGNvbWXDp291IGVsYS4KICAgIDwvcD4KCiAgICA8cCBjbGFzcz0iYmxvZy10NCBibG9nLXQyIj4KICAgICAgTmEgc2VxdcOqbmNpYSwgSnVqdSBleHBsaWNvdSBxdWUgcGFzc291IHBvciBtb21lbnRvcyBkaWbDrWNlaXMsIHRhbnRvIHBvcgogICAgICBjb250YSBkYSBkZXByZXNzw6NvIHF1ZSBwYXNzYXZhLCBjb21vIHBvciBzdWEgYXV0b2VzdGltYS4gIk51bmNhIG1lCiAgICAgIGFwcm9mdW5kZWkgbm8gYXNzdW50bywgcG9ycXVlIHJlYWxtZW50ZSBmb2kgbXVpdG8gZGlmw61jaWwgcGFyYSBtaW0uIEZvaQogICAgICB1bWEgw6lwb2NhIGRlIG11aXRhIHRyaXN0ZXphLiBNdWxoZXIgw6kgbXVpdG8gbGlnYWRhIGEgY2FiZWxvLCBvIGNhYmVsbwogICAgICBmYXogcGFydGUgZGUgb2l0ZW50YSBwb3IgY2VudG8gZGEgYXV0b2VzdGltYSBkYSBtdWxoZXIiLCBkaXNzZS4KICAgIDwvcD4KCiAgICA8cCBjbGFzcz0iYmxvZy10NCBibG9nLXQyIj4KICAgICAgQSBhcHJlc2VudGFkb3JhIGV4cGxpY291IHF1ZSBvIHByb2JsZW1hIGEgYXRvcm1lbnRvdSBpbmNsdXNpdmUgZW0gc3VhCiAgICAgIHZpZGEgcHJvZmlzc2lvbmFsLCBlIGNvbnRvdSBjb21vIGVuZnJlbnRvdSwgbmEgw6lwb2NhLiAiSXNzbyBtZQogICAgICBhdHJhcGFsaG91IHBvciBtdWl0byB0ZW1wbywgcG9yIGNvbnRhIGRvIG1ldSB0cmFiYWxoby4gRXUgcHJlY2lzbyBlc3RhcgogICAgICBjb20gbyBjYWJlbG8gYm9tLiBQb3IgbXVpdG8gdGVtcG8gZmlxdWVpIGNvbSBjYWJlbG8gY3VydG8sIHVzYXZhIG11aXRvCiAgICAgIGJvbsOpLCBmYXppYSBwZW50ZWFkb3MgcXVlIHB1ZGVzc2VtIGRpc2ZhcsOnYXIuIE1ldSBjYWJlbGVpcmVpcm8gc2VtcHJlCiAgICAgIGNvbG9jYXZhIGNhYmVsbyBwb3IgZGVudHJvIHBhcmEgZGFyIHZvbHVtZSwgYXTDqSBhcXVpIGVtIGNpbWEuIFRpbmhhCiAgICAgIHbDoXJpb3MgdHJ1cXVlcyIsIGV4cGxpY291LgogICAgPC9wPgoKICAgIDxwIGNsYXNzPSJibG9nLXQ0IGJsb2ctdDIiPgogICAgICBKdWp1IGFpbmRhIGNvbnRvdSBxdWUgcGFzc291IG8gYW5vIHBhc3NhZG8gdHJhdGFuZG8gbyBwcm9ibGVtYSBkZSBxdWVkYQogICAgICBkZSBjYWJlbG8gZSBldml0b3UgbWFuaXB1bGFyIG9zIGZpb3MuICJEZWl4ZWkgZWxlIHJlc3BpcmFyLCBkZXNjb2xvcmkKICAgICAgbWVub3MuIFRhbWLDqW0gbsOjbyB1c2VpIGFsb25nYW1lbnRvIHBhcmEgbsOjbyBwZXNhci4gRm9pIHRvZG8gdW0gcHJvY2Vzc28uCiAgICAgIE1hcyBldSByZWFsbWVudGUgbnVuY2EgbW9zdHJlaSBwYXJhIHZvY8OqcyBjb21vIGZpY291IG5hcXVlbGEgw6lwb2NhIiwKICAgICAgZGlzc2UgZWxhLCBjb2xvY2FuZG8gbmEgc2VxdcOqbmNpYSB1bWEgaW1hZ2VtIGRlIHNldSBjb3VybyBjYWJlbHVkbyBlCiAgICAgIG1vc3RyYW5kbyBhcyBmYWxoYXMgcXVlIGFjb21ldGVyYW0gbm8gcGVyw61vZG8gZW0gcXVlIHBhc3NvdSBwZWxhCiAgICAgIGRlcHJlc3PDo28uCiAgICA8L3A+CgogICAgPHAgY2xhc3M9ImJsb2ctdDQgYmxvZy10MiI+CiAgICAgICJFc3NhIMOpIGEgZm90byBkbyBlc3RhZG8gZW0gcXVlIG1ldSBjYWJlbG8gZXN0YXZhIGjDoSBtYWlzIG91IG1lbm9zIHVtCiAgICAgIGFubyBlIG1laW8uIEZvaSBkZXNlc3BlcmFkb3IsIGdlbnRlLiBBIHBpb3IgZmFzZSBkYSBtaW5oYSB2aWRhIiwgZGlzc2UuCiAgICA8L3A+CgogICAgPGgyIGNsYXNzPSJibG9nLXQ1Ij5Db25maXJhIG8gdsOtZGVvIGRlIEp1anUgU2FsaW1lbmk6PC9oMj4KCiAgICA8ZGl2IGNsYXNzPSJibG9nLXZpZGVvIj4KICAgICAgPGlmcmFtZSBzcmM9Imh0dHBzOi8vd3d3LnlvdXR1YmUuY29tL2VtYmVkL2RweXJEZ09vaG5JIiBhbGxvd2Z1bGxzY3JlZW4+PC9pZnJhbWU+CiAgICA8L2Rpdj4KCiAgICA8cCBjbGFzcz0iYmxvZy10NCBibG9nLXQyIj4KICAgICAgSnVqdSBhaW5kYSBjb250b3UgcXVlIHBhc3NvdSBvIGFubyBwYXNzYWRvIHRyYXRhbmRvIG8gcHJvYmxlbWEgZGUgcXVlZGEKICAgICAgZGUgY2FiZWxvIGUgZXZpdG91IG1hbmlwdWxhciBvcyBmaW9zIHF1aW1pY2FtZW50ZSBlIHByb2N1cm91IGZvY2FyIG5hCiAgICAgIG51dHJpw6fDo28gZG9zIGZpb3MgYXRyYXbDqXMgZGUgc3VwbGVtZW50b3Mgdml0YW3DrW5pY28gLiAiUHJpbWVpcm8gcHJlY2lzbwogICAgICBhZ3JhZGVjZXIgZGVtYWlzIG8KICAgICAgPHJvdXRlci1saW5rIGNsYXNzPSJibG9nLXQ3IiB0bz0iL3Byb2R1dG9zIj5OZXcgSGFpciBDYXBzPC9yb3V0ZXItbGluaz4KICAgICAgLCBhcyBjYXBzdWxhcyBzw6NvIGNvbW8gbcOhZ2ljYSwgcGFyZWkgZGUgdXNhciBhbG9uZ2FtZW50byBwb3JxdWUgbWV1CiAgICAgIGNhYmVsbyBzaW1wbGVzbWVudGUgY3Jlc2NldS4gRm9pIHRvZG8gdW0gcHJvY2Vzc28sIGJ1c3F1ZWkgbnV0cmlyCiAgICAgIGJhc3RhbnRlIG9zIGZpb3MgZSBjdWlkYXIgZGEgc2HDumRlIGRlIGRlbnRybyBwcmEgZm9yYSwgZSBvCiAgICAgIDxyb3V0ZXItbGluayBjbGFzcz0iYmxvZy10NyIgdG89Ii9wcm9kdXRvcyI+TmV3IEhhaXIgQ2Fwczwvcm91dGVyLWxpbms+CiAgICAgIG1lIGFqdWRvdSBtdWl0byBuZXN0YSBmYXNlLiAiLCBkaXNzZSBlbGEsIHRvZGEgZW1wb2xnYWRhIGNvbG9jYW5kbyBuYQogICAgICBzZXF1w6puY2lhIHVtYSBpbWFnZW0gZGUgc2V1IGNvdXJvIGNhYmVsdWRvIGUgbW9zdHJhbmRvIGFzIGZhbGhhcyBxdWUKICAgICAgYWNvbWV0ZXJhbSBubyBwZXLDrW9kbyBlbSBxdWUgcGFzc291IHBlbGEgZGVwcmVzc8Ojby4KICAgIDwvcD4KCiAgICA8cCBjbGFzcz0iYmxvZy10NCBibG9nLXQyIj4KICAgICAgIkVzc2Egw6kgYSBmb3RvIGRvIGVzdGFkbyBlbSBxdWUgbWV1IGNhYmVsbyBlc3RhdmEgaMOhIG1haXMgb3UgbWVub3MgdW0KICAgICAgYW5vIGUgbWVpby4gRm9pIGRlc2VzcGVyYWRvciwgZ2VudGUuIEEgcGlvciBmYXNlIGRhIG1pbmhhIHZpZGEsIG1hcwogICAgICBncmHDp2FzIGEgRGV1cyBwYXNzb3UsIHRvZG8gbXVuZG8gcHJlY2lzYSBjb25oZWNlciBvCiAgICAgIDxyb3V0ZXItbGluayBjbGFzcz0iYmxvZy10NyIgdG89Ii9wcm9kdXRvcyI+TmV3IEhhaXIgQ2Fwczwvcm91dGVyLWxpbms+CiAgICAgICwgaG9qZSBldSBmYWxvIGNvbSBwcm9wcmllZGFkZSBwb3JxdWUgZmF6IHBhcnRlIGRvIG1ldSBkaWEtYS1kaWEuIEFzCiAgICAgIHBlc3NvYXMgYWNoYW0gcXVlIGZpZ3VyYXMgcMO6YmxpY2FzIG7Do28gdGVtIGFiYWxvIG5hIGF1dG9lc3RpbWEsIG1hcyBhCiAgICAgIG1pbmhhIGVzdGF2YSBtdWl0byBhYmFsYWRhLCBlIGRlcG9pcyBxdWUgZGVzY29icmkgZXNzZSB0cmF0YW1lbnRvIHR1ZG8KICAgICAgdm9sdG91IGFvIG5vcm1hbCIsIGRpc3NlLgogICAgPC9wPgoKICAgIDxpbWcgc3JjPSJAL2Fzc2V0cy9pbWcvYmxvZy9qdWp1LXNhbGltZW5pLTIuanBnIiBhbHQ9Ikp1anUgU2FsaW1lbmkgcmVsZW1icmEgZGVwcmVzc8OjbyBlIHF1ZWRhIGRlIGNhYmVsbyIvPgoKICAgIDxwIGNsYXNzPSJibG9nLXQ2Ij5Gb250ZTo8YSB0YXJnZXQ9Il9ibGFuayIgaHJlZj0iaHR0cHM6Ly9yZXZpc3RhcXVlbS5nbG9iby5jb20vUVVFTS1OZXdzL25vdGljaWEvMjAyMC8wNi9qdWp1LXNhbGltZW5pLXJlbGVtYnJhLWRlcHJlc3Nhby1lLXF1ZWRhLWRlLWNhYmVsby1waW9yLWZhc2UtZGEtdmlkYS5odG1sIj5odHRwczovL3JldmlzdGFxdWVtLmdsb2JvLmNvbS9RVUVNLU5ld3Mvbm90aWNpYS8yMDIwLzA2L2p1anUtc2FsaW1lbmktcmVsZW1icmEtZGVwcmVzc2FvLWUtcXVlZGEtZGUtY2FiZWxvLXBpb3ItZmFzZS1kYS12aWRhLmh0bWw8L2E+PC9wPgoKICAgIDxyb3V0ZXItbGluayBjbGFzcz0iYmxvZy1idG5QZWRpZG8iIHRvPSIvcHJvZHV0b3MiPkZBw4dBIFNFVSBQRURJRE88L3JvdXRlci1saW5rPgogIDwvZGl2Pgo8L2Rpdj4K"},null]}